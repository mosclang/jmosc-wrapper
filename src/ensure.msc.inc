// Generated automatically from src/packages/ensure.msc. Do not edit.
static const char* ensureModuleSource =
"kulu Fili {\n"
"  sebenma { ale.message }\n"
"  wili() { Djuru.tike(ale) }\n"
"}\n"
"\n"
"kulu ArgumentFili ye Fili {\n"
"  nin _message\n"
"  dilan kura(message) {\n"
"    ale._message = message\n"
"  }\n"
"  message { ale._message }\n"
"}\n"
"\n"
"kulu Ensure {\n"
"  dialen argumentError(msg) { ArgumentFili.kura(msg).wili() }\n"
"\n"
"  # simple type assertions\n"
"  dialen walaDo(v, name) { Ensure.suku(v, Wala, name ) }\n"
"  dialen walanDo(v, name) { Ensure.suku(v, Walan, name ) }\n"
"  dialen diatedenDo(v, name) { Ensure.suku(v, Diat, name) }\n"
"  dialen sebenDo(v, name) { Ensure.suku(v, Seben, name) }\n"
"  dialen tienDo(v, name) { Ensure.suku(v, Tienya, name) }\n"
"\n"
"  dialen int(v, name) {\n"
"    nii (!(v ye Diat) || !v.yeInt) Ensure.argumentError(\"Expected integer (Diat) argument for '$name'\")\n"
"  }\n"
"\n"
"  dialen positiveNum(v, name) {\n"
"    nii (!(v ye Diat) || v < 0) Ensure.argumentError(\"Expected positive 'Diat' argument for '$name'\")\n"
"  }\n"
"\n"
"  dialen positiveInt(v, name) {\n"
"    nii (!(v ye Diat) || !v.yeInt || v < 0) Ensure.argumentError(\"Expected positive integer (Diat) argument for '$name'\")\n"
"  }\n"
"\n"
"  dialen tiiDo(v, arity, name) {\n"
"    nii (!(v ye Tii) || v.arity != arity) Ensure.argumentError(\"Expected 'Tii' with $arity parameters argument for '$name'\")\n"
"  }\n"
"\n"
"  dialen suku(v, type, name) {\n"
"    nii (!(v ye type)) Ensure.argumentError(\"Expected '$type' argument for '$name'\")\n"
"  }\n"
"\n"
"}\n";
